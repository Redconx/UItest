"use strict";

var _define = require("../preactement/define");
var _Pagination = require("../../Pagination");
var _wrapperUtils = require("../wrapperUtils");
var _jsxRuntime = require("preact/compat/jsx-runtime");
const attributes = ['class-name', 'compact', 'current-page', 'is-navigation-hidden', 'heading-aria-label', 'heading-level', 'href-template', 'start-label-text', 'start-aria-label', 'end-label-text', 'end-aria-label', 'root-id', 'total-pages'];

/* eslint-disable @typescript-eslint/no-namespace */

/* eslint-enable */

const Wrapper = _ref => {
  let {
    compact,
    currentPage,
    isNavigationHidden,
    headingAriaLabel,
    hrefTemplate,
    rootId,
    totalPages,
    ...otherProps
  } = _ref;
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Pagination.Pagination, {
    ...otherProps,
    ariaLabel: headingAriaLabel,
    compact: (0, _wrapperUtils.parseBooleanAttr)(compact),
    currentPage: (0, _wrapperUtils.parseIntegerAttr)(currentPage) ?? 0,
    isNavigationHidden: (0, _wrapperUtils.parseBooleanAttr)(isNavigationHidden),
    renderHref: page => (hrefTemplate ?? '#page={page}').replace('{page}', '' + page),
    id: rootId,
    totalPages: (0, _wrapperUtils.parseIntegerAttr)(totalPages) ?? 0
  });
};
(0, _define.define)('ds-pagination', () => Wrapper, {
  attributes,
  events: [['onPageChange', (event, page) => ({
    ...event,
    detail: {
      target: event.target,
      page
    },
    preventDefault: () => event.preventDefault()
  })]]
});