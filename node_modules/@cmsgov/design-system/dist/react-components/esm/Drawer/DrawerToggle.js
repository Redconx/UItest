import Button from '../Button/Button';
import { useEffect, useRef } from 'react';
import classNames from 'classnames';
import usePrevious from '../utilities/usePrevious';
import { jsx as _jsx } from "react/jsx-runtime";
/**
 * A link that triggers the visibility of a drawer
 */
export const DrawerToggle = _ref => {
  let {
    className,
    children,
    inline,
    showDrawer,
    drawerOpen,
    ...others
  } = _ref;
  const buttonRef = useRef(null);
  const prevDrawerOpenProp = usePrevious(drawerOpen);
  useEffect(() => {
    // if drawer was open but now closed, focus the toggle
    if (prevDrawerOpenProp && !drawerOpen && buttonRef.current) {
      buttonRef.current.focus();
    }
  }, [drawerOpen]);
  const classes = classNames('ds-c-drawer__toggle', inline && 'ds-c-drawer__toggle--inline', className);
  return /*#__PURE__*/_jsx(Button, {
    className: classes,
    inputRef: el => buttonRef.current = el,
    onClick: showDrawer,
    variation: "ghost",
    ...others,
    children: children
  });
};
export default DrawerToggle;