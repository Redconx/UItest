import { define } from '../preactement/define';
import { Dropdown } from '../../Dropdown';
import { parseBooleanAttr } from '../wrapperUtils';
import { formAttrs } from '../shared-attributes/form';
import { jsx as _jsx } from "react/jsx-runtime";
const attributes = [
// Using the lowercase HTML attribute name rather than `auto-focus` so it's
// more natural. There's no reason for us to worry about name collisions.
'autofocus', 'aria-disabled', 'class-name', 'default-value', 'disabled', 'field-class-name', 'inversed', 'name', 'options', 'root-id', 'size', 'value', ...formAttrs];

/* eslint-disable @typescript-eslint/no-namespace */

/* eslint-enable */

const Wrapper = _ref => {
  let {
    children,
    options,
    rootId,
    ...otherProps
  } = _ref;
  return /*#__PURE__*/_jsx(Dropdown, {
    ...otherProps,
    autoFocus: parseBooleanAttr(otherProps.autofocus),
    disabled: parseBooleanAttr(otherProps.disabled),
    "aria-disabled": parseBooleanAttr(otherProps.ariaDisabled),
    options: typeof options === 'string' ? JSON.parse(options) : options,
    id: rootId,
    inversed: parseBooleanAttr(otherProps.inversed),
    children: options ? undefined : children
  });
};
define('ds-dropdown', () => Wrapper, {
  attributes,
  events: ['onChange', 'onBlur']
});