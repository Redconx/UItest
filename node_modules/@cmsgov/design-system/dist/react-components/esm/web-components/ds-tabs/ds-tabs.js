import { define } from '../preactement/define';
import { Tabs, TabPanel } from '../../Tabs';
import { parseBooleanAttr, parseJsonAttr } from '../wrapperUtils';
import { createElement } from 'react';
import { jsx as _jsx } from "react/jsx-runtime";
const attributes = ['default-selected-id', 'selected-id', 'tablist-class-name', 'tabs-aria-label'];
function parseChildren(nodes) {
  return nodes.map(element => {
    const attrs = element.props;
    if (!attrs.id || !attrs.children || !attrs.tab) {
      console.warn('Each child passed to `ds-tabs` must include `id` and `children` attributes for `TabPanel` functionality.');
      return null;
    }
    const {
      id,
      children,
      'class-name': className,
      selected: selected,
      disabled: disabled,
      tab: tab,
      'tab-class-name': tabClassName,
      'tab-href': tabHref,
      'tab-id': tabId,
      ...otherAttributes
    } = attrs;
    const props = {
      id,
      className,
      selected: parseBooleanAttr(selected),
      disabled: parseBooleanAttr(disabled),
      tab: parseJsonAttr(tab),
      tabClassName,
      tabHref,
      tabId
    };
    return /*#__PURE__*/createElement(TabPanel, {
      ...props,
      ...otherAttributes
    }, children);
  });
}
const Wrapper = _ref => {
  let {
    tabsAriaLabel,
    ...props
  } = _ref;
  return /*#__PURE__*/_jsx(Tabs, {
    ...props,
    ariaLabel: tabsAriaLabel,
    children: parseChildren(props.children)
  });
};

/* eslint-disable @typescript-eslint/no-namespace */

/* eslint-enable */

define('ds-tabs', () => Wrapper, {
  attributes,
  events: [['onChange', (selectedId, prevSelectedId) => ({
    detail: {
      selectedId,
      prevSelectedId
    }
  })]]
});