"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useHelpDrawerAnalytics;
var _analytics = require("../analytics");
var _config = require("../config");
var _useNativeDialogAnalytics = require("../NativeDialog/useNativeDialogAnalytics");
function useHelpDrawerAnalytics(_ref) {
  let {
    analytics,
    analyticsLabelOverride,
    onAnalyticsEvent = (0, _config.config)().defaultAnalyticsFunction,
    isOpen
  } = _ref;
  function sendHelpDrawerEvent(content, eventAttributes) {
    if (analytics !== true && (!(0, _config.config)().helpDrawerSendsAnalytics || analytics === false)) {
      return;
    }
    const eventHeadingText = analyticsLabelOverride ?? content;
    if (!eventHeadingText) {
      console.error('No content found for Help Drawer analytics event');
      return;
    }
    onAnalyticsEvent({
      event_extension: _analytics.eventExtensionText,
      heading: eventHeadingText,
      ...eventAttributes
    });
  }

  // We need to send help_drawer_opened when it's open once and only once.
  // We need to send help_drawer_closed only when it was open and then closed.
  const headingRef = (0, _useNativeDialogAnalytics.useNativeDialogAnalytics)({
    isOpen,
    onOpen: content => {
      sendHelpDrawerEvent(content, {
        event_name: 'help_drawer_opened'
      });
    },
    onClose: content => {
      sendHelpDrawerEvent(content, {
        event_name: 'help_drawer_closed'
      });
    }
  });
  return headingRef;
}