import { AnalyticsFunction, sendLinkEvent } from './analytics';
import type { ErrorPlacement } from './InlineError/useInlineError';
export interface Config {
    /**
     * Sets the default error placement for form-field components, which is the placement
     * of the error message relative to the field input. Accepts string values of 'top' or
     * 'bottom'.
     */
    errorPlacementDefault: ErrorPlacement;
    /**
     * Changing this setting allows applications to override the default `onAnalyticsEvent`
     * handler function for all analytics-enabled components. To override it for a single
     * component instance, use the `onAnalyticsEvent` prop instead.
     */
    defaultAnalyticsFunction: AnalyticsFunction;
    /**
     * Controls whether alert components send analytics data by default. To override this
     * setting for an individual alert instance, use the `analytics` prop.
     */
    alertSendsAnalytics: boolean;
    /**
     * Controls whether button components send analytics data by default. To override this
     * setting for an individual button instance, use the `analytics` prop.
     */
    buttonSendsAnalytics: boolean;
    /**
     * Controls whether dialog components send analytics data by default. To override this
     * setting for an individual dialog instance, use the `analytics` prop.
     */
    dialogSendsAnalytics: boolean;
    /**
     * Controls whether help drawer components send analytics data by default. To override
     * this setting for an individual help drawer instance, use the `analytics` prop.
     */
    helpDrawerSendsAnalytics: boolean;
    /**
     * Controls whether the header component send analytics data. Defaults to true.
     */
    headerSendsAnalytics: boolean;
    /**
     * Controls whether the footer component send analytics data. Defaults to true.
     */
    footerSendsAnalytics: boolean;
    /**
     * Controls whether third-party-external-link components send analytics data by default.
     * To override this setting for an individual alert instance, use the `analytics` prop.
     */
    thirdPartyExternalLinkSendsAnalytics: boolean;
}
export type PartialConfig = Partial<Config>;
export declare const DEFAULTS: Config;
export declare const HEALTHCARE_DEFAULTS: Config;
export declare function config(incomingConfig?: PartialConfig): Config;
export declare namespace config {
    var DEFAULTS: Config;
    var HEALTHCARE_DEFAULTS: Config;
}
export declare function setDefaultAnalyticsFunction(analyticsFunction: AnalyticsFunction): void;
export declare const defaultAnalyticsFunction: typeof sendLinkEvent;
export declare function errorPlacementDefault(): ErrorPlacement;
export declare function setErrorPlacementDefault(value: ErrorPlacement): void;
export declare function alertSendsAnalytics(): boolean;
export declare function setAlertSendsAnalytics(value: boolean): void;
export declare function buttonSendsAnalytics(): boolean;
export declare function setButtonSendsAnalytics(value: boolean): void;
export declare function dialogSendsAnalytics(): boolean;
export declare function setDialogSendsAnalytics(value: boolean): void;
export declare function helpDrawerSendsAnalytics(): boolean;
export declare function setHelpDrawerSendsAnalytics(value: boolean): void;
