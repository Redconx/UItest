import type * as React from 'react';
export interface UseHintProps {
    /**
     * Additional hint text to display
     */
    hint?: React.ReactNode;
    /**
     * The ID of the hint element
     */
    hintId?: string;
    /**
     * A unique `id` for the field element
     */
    id: string;
    /**
     * Set to `true` to apply the "inverse" color scheme
     */
    inversed?: boolean;
    /**
     * Text showing the requirement ("Required", "Optional", etc.). See [Required and Optional Fields](https://design.cms.gov/patterns/Forms/forms/#required-and-optional-fields).
     */
    requirementLabel?: React.ReactNode;
    /**
     * Custom CSS class name(s) for the hint element
     */
    hintClassName?: string;
}
/**
 * Hook that takes the props for a form field component, extracts the props relevant
 * to the Hint, and conditionally renders the hint if it is needed.
 */
export declare function useHint<T extends UseHintProps>(props: T): {
    hintId: any;
    hintElement: any;
};
