/// <reference types="react" />
export interface UseNativeDialogAnalyticsProps {
    isOpen: boolean;
    onOpen: (content?: string) => any;
    onClose?: (content?: string) => any;
}
/**
 * This hook is for any component based on `NativeDialog` that needs analytics that fire
 * upon opening and closing. You provide it the `isOpen` prop being passed to the
 * `NativeDialog` and handlers for `onOpen` and `onClose`, which will be called with the
 * rendered heading content based on where you apply the ref this hook returns. Example:
 *
 * const headingRef = useNativeDialogAnalytics({
 *   isOpen: props.isOpen,
 *   onOpen: (content) => {
 *     // Send an event
 *   },
 *  onClose: (content) => {
 *     // Send an event
 *   }
 * })
 *
 * return (
 *   <NativeDialog {...props}>
 *     <h1 ref={headingRef}>Hello World</h1>
 *   </NativeDialog>
 * )
 */
export declare function useNativeDialogAnalytics({ isOpen, onOpen, onClose, }: UseNativeDialogAnalyticsProps): import("react").MutableRefObject<undefined>;
