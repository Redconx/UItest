import type * as React from 'react';
import { ButtonVariation } from '../Button/Button';
export interface DrawerProps {
    /**
     * Gives more context to screen readers on the Drawer close button.
     */
    ariaLabel?: string;
    /**
     * Pass `true` to have the dialog close when its backdrop pseudo-element is clicked
     */
    backdropClickExits?: boolean;
    /**
     * Helpful description of the drawer for screenreaders. An alias for `ariaLabel` specifically added to improve accessibility for the web component version of this component.
     */
    closeButtonAriaLabel?: string;
    closeButtonText?: React.ReactNode;
    closeButtonVariation?: ButtonVariation;
    children: React.ReactNode;
    className?: string;
    footerBody?: React.ReactNode;
    footerTitle?: React.ReactNode;
    /**
     * Enables focus trap functionality within Drawer.
     */
    hasFocusTrap?: boolean;
    /**
     * Text for the Drawer heading. Required because the `heading` will be focused on mount.
     */
    heading: React.ReactNode;
    /**
     * A unique `id` to be used on heading element to label multiple instances of Drawer.
     */
    headingId?: string;
    /**
     * Heading type to override default `<h3>`
     */
    headingLevel?: '1' | '2' | '3' | '4' | '5';
    /**
     * Ref to heading element
     */
    headingRef?: React.MutableRefObject<any>;
    /**
     * Enables "sticky" position of Drawer header element.
     */
    isHeaderSticky?: boolean;
    /**
     * Enables "sticky" position of Drawer footer element.
     */
    isFooterSticky?: boolean;
    /**
     * Controls whether the dialog is in an open state
     */
    isOpen: boolean;
    /**
     * Called when the user activates the close button or presses the ESC key if
     * focus trapping is enabled. The parent of this component is responsible for
     * showing or not showing the drawer, so you need to use this callback to
     * make that happen. The dialog does not hide itself.
     */
    onCloseClick: (event: React.MouseEvent | React.KeyboardEvent) => void;
}
/**
 * For information about how and when to use this component,
 * [refer to its full documentation page](https://design.cms.gov/components/drawer/).
 */
export declare const Drawer: {
    (props: DrawerProps): import("react/jsx-runtime").JSX.Element;
    defaultProps: {
        hasFocusTrap: boolean;
        headingLevel: "3";
    };
};
export default Drawer;
