import type * as React from 'react';
export type PaginationHeadingLevel = '1' | '2' | '3' | '4' | '5' | '6';
interface BasePaginationProps {
    /**
     * Defines `aria-label` on the screen-reader heading for this element, which precedes the page count readout. Since this exists on a `<nav>` element, the word "navigation" should be omitted from this label. Optional.
     */
    ariaLabel?: string;
    /**
     * Class to be applied to parent `<nav>` element of Pagination component. Optional.
     */
    className?: string;
    /**
     * Renders compact layout. Optional.
     */
    compact?: boolean;
    /**
     * An integer representing active page number in the pagination results.
     */
    currentPage: number;
    /**
     * Heading type to override default `<h2>` used in the screen-reader heading.
     */
    headingLevel?: PaginationHeadingLevel;
    /**
     * Determines if navigation is hidden when current page is the first or last of Pagination page set. Optional.
     */
    isNavigationHidden?: boolean;
    /**
     * A callback function this is invoked whenever a page link is clicked, including the previous and next buttons. It is called with both the event object and the page number.
     */
    onPageChange: (evt: React.MouseEvent, page: number) => void;
    /**
     * Defines application-specific routing in url for links.
     */
    renderHref: (page: number) => string;
    /**
     * Sets custom label on start navigation. Added for language support. Optional.
     */
    startLabelText?: string;
    /**
     * Sets custom ARIA label on start navigation. Added for language support. Label structure should be the equivalent of: Previous Page. Optional.
     */
    startAriaLabel?: string;
    /**
     * Sets custom label on end navigation. Added for language support. Optional.
     */
    endLabelText?: string;
    /**
     * Sets custom ARIA label on end navigation. Added for language support. Label structure should be the equivalent of: Next Page. Optional.
     */
    endAriaLabel?: string;
    /**
     * An integer representing total number of pages in the pagination results.
     */
    totalPages: number;
}
export type PaginationProps = BasePaginationProps & Omit<React.ComponentPropsWithRef<'nav'>, keyof BasePaginationProps>;
/**
 * For information about how and when to use this component,
 * [refer to its full documentation page](https://design.cms.gov/components/pagination/).
 */
export declare function Pagination({ ariaLabel, className, compact, currentPage, renderHref, onPageChange, headingLevel, isNavigationHidden, startLabelText, startAriaLabel, endLabelText, endAriaLabel, totalPages, ...rest }: PaginationProps): React.ReactElement;
export declare namespace Pagination {
    var defaultProps: {
        compact: boolean;
        headingLevel: string;
        isNavigationHidden: boolean;
    };
}
export default Pagination;
