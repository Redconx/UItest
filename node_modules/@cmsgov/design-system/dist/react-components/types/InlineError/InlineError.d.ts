import type * as React from 'react';
export interface InlineErrorProps {
    /**
     * Error text or HTML
     */
    children?: React.ReactNode;
    /**
     * Additional classes to be added to the root element.
     */
    className?: string;
    /**
     * The ID of the error element
     */
    id?: string;
    /**
     * Set to `true` to apply the "inverse" theme
     */
    inversed?: boolean;
}
/**
 * Inline errors are error messages that are paired directly with form fields.
 * They are built in to all form fields in the design system, but they can also
 * be used on their own to create custom fields.
 *
 * For information about how and when to use this component,
 * [refer to its full documentation page](https://design.cms.gov/components/inline-error/).
 */
export declare function InlineError({ children, className, id, inversed, ...otherProps }: InlineErrorProps): React.ReactElement;
export default InlineError;
