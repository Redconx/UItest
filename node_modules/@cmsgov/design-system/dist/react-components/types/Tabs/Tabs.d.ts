import React from 'react';
export interface TabsProps {
    /**
     * Defines a customizable `aria-label` on the screen-reader heading for this element.
     */
    ariaLabel?: string;
    /**
     * Must only contain `TabPanel` components
     */
    children: React.ReactNode;
    /**
     * Sets the initial selected state to the specified `TabPanel` id. Use this
     * for an uncontrolled component; otherwise, use the `selectedId` property.
     * If no selected id is specified, the first `TabPanel` will be selected.
     */
    defaultSelectedId?: string;
    /**
     * Sets the initial selected state to the specified `TabPanel` id. Use this
     * in combination with `onChange` for a controlled component; otherwise, set
     * `defaultSelectedId`.
     */
    selectedId?: string;
    /**
     * A callback function that's invoked when the selected tab is changed.
     * `(selectedId, prevSelectedId) => void`
     */
    onChange?: (selectedId: string, prevSelectedId: string) => any;
    /**
     * Additional classes to be added to the component wrapping the tabs
     */
    tablistClassName?: string;
}
/**
 * `Tabs` is a container component that manages the state of your tabs for you.
 * In most cases, you'll want to use this component rather than the
 * presentational components (`Tab`, `TabPanel`) on their own.
 *
 * A `TabPanel` is a presentational component which accepts a tab's content as
 * its `children`.
 *
 * For information about how and when to use this component,
 * [refer to its full documentation page](https://design.cms.gov/components/tabs/).
 */
export declare const Tabs: (props: TabsProps) => import("react/jsx-runtime").JSX.Element;
export default Tabs;
