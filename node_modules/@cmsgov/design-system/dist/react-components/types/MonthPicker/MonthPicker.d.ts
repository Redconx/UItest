import type * as React from 'react';
import { ButtonVariation } from '../Button/Button';
import { UseLabelPropsProps } from '../Label/useLabelProps';
import { UseHintProps } from '../Hint/useHint';
import { UseInlineErrorProps } from '../InlineError/useInlineError';
interface BaseMonthPickerProps {
    children?: React.ReactNode;
    /**
     * The `input` field's `name` attribute
     */
    name: string;
    /**
     * Additional classes to be added to the root element.
     */
    className?: string;
    /**
     * Variation string to be applied to buttons. See [Button component](https://design.cms.gov/storybook/?path=/docs/components-button--docs)
     */
    buttonVariation?: ButtonVariation;
    /**
     * Array of month numbers, where `1` is January, and any month included
     * is disabled for selection.
     */
    disabledMonths?: number[];
    /**
     * Array of month numbers, where `1` is January, and any month included
     * is selected. This will render a read-only field. If the field should
     * be mutable, use `defaultSelectedMonths`.
     */
    selectedMonths?: number[];
    /**
     * Array of month numbers, where `1` is January, and any month included
     * is selected by default. Sets the initial checked state for the 12 month
     * checkboxes. Use this for an uncontrolled component; otherwise, use the
     * `selectedMonths` property.
     */
    defaultSelectedMonths?: number[];
    /**
     * A unique ID for this element. A unique ID will be generated if one isn't provided.
     */
    id?: string;
    /**
     * Set to `true` to apply the "inverse" color scheme
     */
    inversed?: boolean;
    /**
     * A callback function that's invoked when a month's checked state is changed.
     * Note: This callback is not called when a month is selected or deselected
     * via the "Select all" or "Clear all" buttons â€“ use the `onSelectAll` and
     * `onClearAll` event handlers for those instances.
     */
    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => any;
    onSelectAll?: (...args: any[]) => any;
    onClearAll?: (...args: any[]) => any;
    /**
     * The text for the "Select all" button for internationalization
     */
    selectAllText?: string;
    /**
     * The text for the "Clear all" button for internationalization
     */
    clearAllText?: string;
}
export type MonthPickerProps = BaseMonthPickerProps & Omit<UseLabelPropsProps & UseHintProps & UseInlineErrorProps, 'id' | 'inversed'>;
/**
 * For information about how and when to use this component,
 * [refer to its full documentation page](https://design.cms.gov/components/month-picker/).
 */
export declare const MonthPicker: (props: MonthPickerProps) => import("react/jsx-runtime").JSX.Element;
export default MonthPicker;
