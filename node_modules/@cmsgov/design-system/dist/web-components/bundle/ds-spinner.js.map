{"version":3,"file":"ds-spinner.js","mappings":"oMAOO,MAAMA,EAAUC,IACrB,MAAMC,EAAY,IAAW,eAAgBD,EAAME,MAAQ,iBAAiBF,EAAME,OAAQF,EAAMG,UAAY,wBAAyBH,EAAMI,QAAU,uBAAwBJ,EAAMC,WACnL,OAAoB,QAAK,OAAQ,CAC/BA,UAAWA,EACXI,KAAML,EAAMK,KACZC,UAAuB,QAAK,OAAQ,CAClCL,UAAW,iCACXK,SAAUN,EAAM,oBAAqB,IAAAO,GAAE,uBAEzC,EAEJR,EAAQS,aAAe,CACrBH,KAAM,UAER,U,cCjBA,MAMMI,EAAUC,IACd,IAAI,cACFC,KACGC,GACDF,EACJ,OAAoB,QAAK,EAAS,IAC7BE,EACH,iBAAkBD,EAClBR,UAAU,QAAiBS,EAAWT,UACtCC,QAAQ,QAAiBQ,EAAWR,SACpC,GAEJ,OAAO,cAAc,IAAMK,GAAS,CAClCI,WAnBiB,CAAC,iBAAkB,aAAc,WAAY,SAAU,OAAQ,S,iBCJ3E,SAASC,EAAiBC,GAE/B,YAAgBC,IAATD,GAA+B,UAATA,CAC/B,CACO,SAASE,EAAcF,GAC5B,OAAOA,EAAO,IAAIG,KAAKH,QAAQC,CACjC,CACO,SAASG,EAAiBJ,GAC/B,QAAaC,IAATD,EAAoB,OAAOK,SAASL,EAC1C,CACO,SAASM,EAAcN,GAS5B,MARqBO,KACnB,IACEC,KAAKC,MAAMF,EACb,CAAE,MAAOG,GACP,OAAO,CACT,CACA,OAAO,CAAI,EAENC,CAAaX,GAAQQ,KAAKC,MAAMT,GAAQA,CACjD,C","sources":["webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Spinner/Spinner.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/web-components/ds-spinner/ds-spinner.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/web-components/wrapperUtils.js"],"sourcesContent":["import classNames from 'classnames';\nimport { t } from \"../i18n\";\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\n/**\n * For information about how and when to use this component,\n * [refer to its full documentation page](https://design.cms.gov/components/spinner/).\n */\nexport const Spinner = props => {\n  const className = classNames('ds-c-spinner', props.size && `ds-c-spinner--${props.size}`, props.inversed && 'ds-c-spinner--inverse', props.filled && 'ds-c-spinner--filled', props.className);\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: className,\n    role: props.role,\n    children: /*#__PURE__*/_jsx(\"span\", {\n      className: \"ds-u-visibility--screen-reader\",\n      children: props['aria-valuetext'] ?? t('spinner.ariaText')\n    })\n  });\n};\nSpinner.defaultProps = {\n  role: 'status'\n};\nexport default Spinner;","import { define } from \"../preactement/define\";\nimport { Spinner } from \"../../Spinner\";\nimport { parseBooleanAttr } from \"../wrapperUtils\";\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\nconst attributes = ['aria-valuetext', 'class-name', 'inversed', 'filled', 'role', 'size'];\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-enable */\n\nconst Wrapper = _ref => {\n  let {\n    ariaValuetext,\n    ...otherProps\n  } = _ref;\n  return /*#__PURE__*/_jsx(Spinner, {\n    ...otherProps,\n    \"aria-valuetext\": ariaValuetext,\n    inversed: parseBooleanAttr(otherProps.inversed),\n    filled: parseBooleanAttr(otherProps.filled)\n  });\n};\ndefine('ds-spinner', () => Wrapper, {\n  attributes\n});","export function parseBooleanAttr(attr) {\n  // If it's defined but has no value, we count that as `true`.\n  return attr !== undefined && attr !== 'false';\n}\nexport function parseDateAttr(attr) {\n  return attr ? new Date(attr) : undefined;\n}\nexport function parseIntegerAttr(attr) {\n  if (attr !== undefined) return parseInt(attr);\n}\nexport function parseJsonAttr(attr) {\n  const isJsonString = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n  return isJsonString(attr) ? JSON.parse(attr) : attr;\n}"],"names":["Spinner","props","className","size","inversed","filled","role","children","t","defaultProps","Wrapper","_ref","ariaValuetext","otherProps","attributes","parseBooleanAttr","attr","undefined","parseDateAttr","Date","parseIntegerAttr","parseInt","parseJsonAttr","str","JSON","parse","e","isJsonString"],"sourceRoot":""}