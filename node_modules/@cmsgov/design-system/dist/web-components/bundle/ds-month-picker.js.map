{"version":3,"file":"ds-month-picker.js","mappings":"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","sources":["webpack://DesignSystem/./node_modules/ev-emitter/ev-emitter.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Button/Button.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Button/useButtonAnalytics.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/ChoiceList/Choice.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Hint/Hint.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Hint/useHint.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Icons/AlertCircleIcon.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Icons/SvgIcon.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/InlineError/InlineError.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/InlineError/useInlineError.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Label/Label.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Label/useLabelProps.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/analytics/getAnalyticsContentFromRefs.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/utilities/cleanFieldProps.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/utilities/describeField.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/utilities/findElementsOfType.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/utilities/mergeIds.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/utilities/mergeRefs.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/MonthPicker/getMonthNames.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/MonthPicker/MonthPicker.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/MonthPicker/utils.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/web-components/ds-month-picker/ds-month-picker.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/web-components/shared-attributes/form.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/web-components/wrapperUtils.js"],"sourcesContent":["/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n","import classNames from 'classnames';\nimport mergeRefs from \"../utilities/mergeRefs\";\nimport useButtonAnalytics from \"./useButtonAnalytics\";\n\n// Collect all the additional properties that one could supply to a button component\n// that will be passed down to whatever element or component is being used. This is\n// generally permissive in order to keep the typing simple at the expense of being\n// more accurate. In a previous version of this, `OtherProps` was generic so that we\n// could extract any props from a custom component that is being passed in; however,\n// we are deprecating that prop because it's not actually needed and creates\n// unnecessary complexity that we have to maintain.\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\n/**\n * For information about how and when to use this component,\n * [refer to its full documentation page](https://design.cms.gov/components/button/).\n */\nexport const Button = props => {\n  const {\n    analytics,\n    analyticsLabelOverride,\n    analyticsParentHeading,\n    analyticsParentType,\n    onAnalyticsEvent,\n    children,\n    className,\n    inputRef,\n    isAlternate,\n    onClick,\n    onDark,\n    size,\n    variation,\n    ...otherProps\n  } = props;\n  const {\n    contentRef,\n    sendButtonEvent\n  } = useButtonAnalytics(props);\n  const ComponentType = props.href ? 'a' : 'button';\n  const colorSchemeClass = isAlternate && `ds-c-button--alternate`;\n  const modeClass = onDark && `ds-c-button--on-dark`;\n  const sizeClass = size && `ds-c-button--${size}`;\n  const variationClass = variation && `ds-c-button--${variation}`;\n  const allClassNames = classNames('ds-c-button', colorSchemeClass, modeClass, sizeClass, variationClass, className);\n  const attrs = {\n    ...otherProps,\n    className: allClassNames\n  };\n  if (ComponentType !== 'button') {\n    delete attrs.disabled;\n    delete attrs.type;\n    if (props.disabled) {\n      attrs.role = 'link';\n      attrs['aria-disabled'] = true;\n      delete attrs.href;\n    }\n  }\n  function handleClick(e) {\n    if (!props.disabled) {\n      sendButtonEvent();\n      if (onClick) {\n        onClick(e);\n      }\n    }\n  }\n  function handleKeyPress(e) {\n    // Trigger onClick on space key event for `<a>` elements\n    if (e.key === ' ') {\n      handleClick(e);\n    }\n  }\n  return /*#__PURE__*/_jsx(ComponentType, {\n    ref: mergeRefs([inputRef, contentRef]),\n    onClick: handleClick,\n    onKeyPress: ComponentType === 'a' ? handleKeyPress : undefined,\n    ...attrs,\n    children: children\n  });\n};\nButton.defaultProps = {\n  isAlternate: false,\n  onDark: false,\n  type: 'button'\n};\nexport default Button;","import { config } from \"../config\";\nimport { getAnalyticsContentFromRefs, eventExtensionText } from \"../analytics\";\nimport { useRef } from \"preact/compat\";\nexport default function useButtonAnalytics(_ref) {\n  let {\n    analytics,\n    analyticsLabelOverride,\n    analyticsParentHeading,\n    analyticsParentType,\n    href,\n    onAnalyticsEvent = config().defaultAnalyticsFunction,\n    type,\n    variation\n  } = _ref;\n  const contentRef = useRef();\n  function sendButtonEvent() {\n    if (analytics !== true && (!config().buttonSendsAnalytics || analytics === false)) {\n      return;\n    }\n    const buttonText = analyticsLabelOverride ?? getAnalyticsContentFromRefs([contentRef]);\n    const buttonStyle = variation ?? 'default';\n    const buttonType = type ?? 'button';\n    const buttonParentHeading = analyticsParentHeading ?? ' ';\n    const buttonParentType = analyticsParentType ?? ' ';\n    return onAnalyticsEvent({\n      event_name: 'button_engagement',\n      event_extension: eventExtensionText,\n      text: buttonText,\n      button_style: buttonStyle,\n      button_type: href ? 'link' : buttonType,\n      parent_component_heading: buttonParentHeading,\n      parent_component_type: buttonParentType,\n      ...(href ? {\n        link_url: href\n      } : {})\n    });\n  }\n  return {\n    contentRef,\n    sendButtonEvent\n  };\n}","import { useEffect, useState } from \"preact/compat\";\nimport EvEmitter from 'ev-emitter';\nimport classNames from 'classnames';\nimport useId from \"../utilities/useId\";\nimport { InlineError } from \"../InlineError\";\nimport { Label } from \"../Label\";\nimport { useLabelProps } from \"../Label/useLabelProps\";\nimport { useHint } from \"../Hint/useHint\";\nimport cleanFieldProps from \"../utilities/cleanFieldProps\";\nimport describeField from \"../utilities/describeField\";\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\nimport { jsxs as _jsxs } from \"preact/compat/jsx-runtime\";\n/** Used to emit events to all Choice components */\nconst dsChoiceEmitter = new EvEmitter();\n\n/**\n * This component passes any additional props to its underlying input element\n * as attributes. See the corresponding MDN documentation for\n * [input](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input) for\n * a list of valid attributes.\n\n * For information about how and when to use this component, refer to the\n * [checkbox](https://design.cms.gov/components/checkbox/) and\n * [radio](https://design.cms.gov/components/radio/) documentation pages.\n */\n\nexport const Choice = _ref => {\n  let {\n    _choiceChild,\n    ...props\n  } = _ref;\n  const initialCheckedState = props.checked ?? props.defaultChecked;\n  const [internalCheckedState, setChecked] = useState(initialCheckedState);\n  const isControlled = props.checked !== undefined;\n  const checked = isControlled ? props.checked : internalCheckedState;\n  const radioCheckedEventName = `${props.name}-radio-checked`;\n  const id = useId('choice--', props.id);\n  const {\n    hintId,\n    hintElement\n  } = useHint({\n    ...props,\n    id\n  });\n  const labelProps = useLabelProps({\n    ...props,\n    id\n  });\n  let errorId;\n  let errorElement;\n  if (!_choiceChild) {\n    errorId = props.errorId ?? `${id}__error`;\n    errorElement = /*#__PURE__*/_jsx(InlineError, {\n      id: errorId,\n      inversed: props.inversed,\n      className: props.errorMessageClassName,\n      children: props.errorMessage\n    });\n  }\n\n  // Subscribe to changes from other radio buttons in the same group\n  useEffect(() => {\n    // This logic only applies to uncontrolled radio groups\n    if (props.type !== 'radio' || isControlled) {\n      return;\n    }\n    const handleRadioChecked = checkedId => {\n      // A radio button in this group was just checked. If it wasn't this one, uncheck this one\n      if (checkedId !== id) {\n        setChecked(false);\n      }\n    };\n    dsChoiceEmitter.on(radioCheckedEventName, handleRadioChecked);\n    return () => {\n      dsChoiceEmitter.off(radioCheckedEventName, handleRadioChecked);\n    };\n  }, [setChecked]);\n  function handleChange(event) {\n    if (props.onChange) {\n      props.onChange(event);\n    }\n    if (!isControlled) {\n      setChecked(event.target.checked);\n      if (props.type === 'radio' && event.target.checked) {\n        // Emit an event so other radio options can uncheck themselves\n        dsChoiceEmitter.emitEvent(radioCheckedEventName, [id]);\n      }\n    }\n  }\n  const {\n    'aria-live': ariaLive,\n    'aria-relevant': ariaRelevant,\n    'aria-atomic': ariaAtomic,\n    className,\n    inversed,\n    inputClassName,\n    inputRef,\n    size,\n    checkedChildren,\n    uncheckedChildren,\n    ...inputProps\n  } = props;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: className,\n    \"aria-live\": ariaLive ?? (checkedChildren ? 'polite' : null),\n    \"aria-relevant\": ariaRelevant ?? (checkedChildren ? 'additions text' : null),\n    \"aria-atomic\": ariaAtomic ?? (checkedChildren ? 'false' : null),\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"ds-c-choice-wrapper\",\n      children: [/*#__PURE__*/_jsx(\"input\", {\n        ...cleanFieldProps(inputProps),\n        id: id,\n        className: classNames(inputClassName, 'ds-c-choice', {\n          'ds-c-choice--inverse': inversed,\n          'ds-c-choice--small': size === 'small'\n        }),\n        onChange: handleChange,\n        ref: inputRef,\n        \"aria-describedby\": describeField({\n          ...props,\n          errorId,\n          hintId\n        })\n      }), /*#__PURE__*/_jsx(Label, {\n        ...labelProps,\n        fieldId: id\n      }), hintElement, errorElement]\n    }), checked ? checkedChildren : uncheckedChildren]\n  });\n};\nChoice.defaultProps = {\n  _choiceChild: false\n};\nexport default Choice;","import classNames from 'classnames';\nimport { jsxs as _jsxs } from \"preact/compat/jsx-runtime\";\n/**\n * Hints are used in conjunction with a Label to describe individual form fields\n * or fieldsets. They are built in to all form fields in the design system, but\n * they can also be used on their own to create custom fields.\n *\n * For information about how and when to use this component,\n * [refer to its full documentation page](https://design.cms.gov/components/hint/).\n */\nexport const Hint = _ref => {\n  let {\n    children,\n    className,\n    id,\n    inversed,\n    requirementLabel,\n    ...otherProps\n  } = _ref;\n  const hintClasses = classNames('ds-c-hint', inversed && 'ds-c-hint--inverse', className);\n  let hintPadding;\n  if (requirementLabel && children) {\n    if (typeof requirementLabel === 'string') {\n      // Remove any existing spacing and punctuation\n      requirementLabel = requirementLabel.trim().replace(/\\.$/, '');\n      // Add punctuation after the requirementLabel so it doesn't run into the hint\n      requirementLabel = requirementLabel + '.';\n    }\n\n    // Add space between hint and preceding requirementLabel\n    hintPadding = ' ';\n  }\n  return /*#__PURE__*/_jsxs(\"p\", {\n    ...otherProps,\n    id: id,\n    className: hintClasses,\n    children: [requirementLabel, hintPadding, children]\n  });\n};","import { Hint } from \"./Hint\";\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\n/**\n * Hook that takes the props for a form field component, extracts the props relevant\n * to the Hint, and conditionally renders the hint if it is needed.\n */\nexport function useHint(props) {\n  const {\n    hint,\n    inversed,\n    requirementLabel,\n    hintClassName\n  } = props;\n  let hintElement;\n  let hintId;\n  if (hint || requirementLabel) {\n    hintId = props.hintId ?? `${props.id}__hint`;\n    hintElement = /*#__PURE__*/_jsx(Hint, {\n      requirementLabel: requirementLabel,\n      inversed: inversed,\n      id: hintId,\n      className: hintClassName,\n      children: hint\n    });\n  }\n  return {\n    hintId,\n    hintElement\n  };\n}","import { t } from \"../i18n\";\nimport { SvgIcon } from \"./SvgIcon\";\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\nconst defaultProps = {\n  className: '',\n  viewBox: '37 2 135 135'\n};\nexport function AlertCircleIcon(props) {\n  const iconCssClasses = `ds-c-icon--alert-circle ${props.className || ''}`;\n  return /*#__PURE__*/_jsx(SvgIcon, {\n    title: t('icons.alertCircle'),\n    ...defaultProps,\n    ...props,\n    className: iconCssClasses,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M162.18 41.592c-5.595-9.586-13.185-17.176-22.771-22.771-9.588-5.595-20.055-8.392-31.408-8.392-11.352 0-21.821 2.797-31.408 8.392-9.587 5.594-17.177 13.184-22.772 22.771-5.596 9.587-8.393 20.057-8.393 31.408 0 11.351 2.798 21.82 8.392 31.408 5.595 9.584 13.185 17.176 22.772 22.771 9.587 5.595 20.056 8.392 31.408 8.392s21.822-2.797 31.408-8.392c9.586-5.594 17.176-13.185 22.771-22.771C167.773 94.82 170.57 84.35 170.57 73c0-11.351-2.797-21.822-8.39-31.408zm-43.75 70.433c0 .761-.246 1.398-.734 1.914s-1.086.773-1.793.773H100.26c-.706 0-1.331-.271-1.874-.814-.543-.543-.814-1.168-.814-1.873V96.546c0-.706.271-1.331.814-1.874.543-.543 1.168-.814 1.874-.814h15.643c.707 0 1.306.258 1.793.773.488.518.734 1.154.734 1.915v15.479zm-.164-28.026c-.055.543-.339 1.019-.854 1.426-.517.407-1.154.61-1.914.61h-15.073c-.761 0-1.413-.203-1.956-.61-.543-.407-.815-.883-.815-1.426l-1.385-50.595c0-.653.271-1.141.814-1.467.544-.434 1.196-.652 1.956-.652h17.926c.761 0 1.412.217 1.955.652.543.326.813.815.813 1.467l-1.467 50.595z\"\n    })\n  });\n}","import classNames from 'classnames';\nimport useId from \"../utilities/useId\";\n\n// a type for react icon components that makes the 'title' prop optional & removes 'children' from type\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\nimport { jsxs as _jsxs } from \"preact/compat/jsx-runtime\";\nexport const SvgIcon = _ref => {\n  let {\n    ariaHidden,\n    className,\n    children,\n    description,\n    id,\n    inversed,\n    title,\n    viewBox,\n    ...otherProps\n  } = _ref;\n  const svgClasses = classNames('ds-c-icon', {\n    'ds-c-icon--inverse': inversed\n  }, className);\n  const rootId = useId('icon--', id);\n  const titleId = `${rootId}__title`;\n  const descriptionId = `${rootId}__desc`;\n  const ariaLabelledBy = description ? `${titleId} ${descriptionId}` : titleId;\n  const isSrVisible = !ariaHidden;\n  const screenReaderProps = {};\n  if (isSrVisible) {\n    screenReaderProps['aria-labelledby'] = ariaLabelledBy;\n    screenReaderProps['role'] = 'img';\n  }\n  return /*#__PURE__*/_jsxs(\"svg\", {\n    \"aria-hidden\": ariaHidden,\n    className: svgClasses,\n    id: id ?? isSrVisible ? rootId : undefined,\n    viewBox: viewBox,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ...screenReaderProps,\n    ...otherProps,\n    children: [isSrVisible && /*#__PURE__*/_jsx(\"title\", {\n      id: titleId,\n      children: title\n    }), isSrVisible && description && /*#__PURE__*/_jsx(\"desc\", {\n      id: descriptionId,\n      children: description\n    }), children]\n  });\n};\nSvgIcon.defaultProps = {\n  ariaHidden: true,\n  inversed: false\n};","import classNames from 'classnames';\nimport { AlertCircleIcon } from \"../Icons/AlertCircleIcon\";\nimport { t } from \"../i18n\";\nimport useId from \"../utilities/useId\";\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\nimport { Fragment as _Fragment } from \"preact/compat/jsx-runtime\";\nimport { jsxs as _jsxs } from \"preact/compat/jsx-runtime\";\n/**\n * Inline errors are error messages that are paired directly with form fields.\n * They are built in to all form fields in the design system, but they can also\n * be used on their own to create custom fields.\n *\n * For information about how and when to use this component,\n * [refer to its full documentation page](https://design.cms.gov/components/inline-error/).\n */\nexport function InlineError(_ref) {\n  let {\n    children,\n    className,\n    id,\n    inversed,\n    ...otherProps\n  } = _ref;\n  const classes = classNames('ds-c-inline-error', {\n    'ds-c-inline-error--inverse': inversed\n  }, className);\n  const viewbox = '36 -12 186 186';\n  return /*#__PURE__*/_jsx(\"p\", {\n    ...otherProps,\n    className: classes,\n    id: useId('inline-error--', id),\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    children: children && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(AlertCircleIcon, {\n        viewBox: viewbox\n      }), /*#__PURE__*/_jsx(\"span\", {\n        className: \"ds-u-visibility--screen-reader\",\n        children: `${t('inlineError.prefix')}: `\n      }), children]\n    })\n  });\n}\nexport default InlineError;","import InlineError from \"./InlineError\";\nimport classNames from 'classnames';\nimport { config } from \"../config\";\n\n// TODO: We should conditionally return an errorId, because we want to be able\n// to include it in the aria-describedby without conditional logic in the component\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\n/**\n * Hook that takes the props for a form field component, extracts the props relevant\n * to the error message, and conditionally renders an `InlineError` in the `topError`\n * or `bottomError` property based on the `errorPlacement` and the presence of an\n * `errorMessage`.\n */\nexport function useInlineError(props) {\n  const errorId = props.errorId ?? `${props.id}__error`;\n  const {\n    errorMessage,\n    errorMessageClassName,\n    errorPlacement = config().errorPlacementDefault,\n    inversed\n  } = props;\n  const errorElement = /*#__PURE__*/_jsx(InlineError, {\n    id: errorId,\n    inversed: inversed,\n    className: classNames(errorMessageClassName, errorPlacement === 'bottom' && errorMessage && 'ds-c-inline-error--bottom'),\n    children: errorMessage\n  });\n  let topError;\n  let bottomError;\n  if (errorPlacement === 'top') {\n    topError = errorElement;\n  } else {\n    bottomError = errorElement;\n  }\n\n  // If the user has provided an `aria-invalid` attribute, use that as the source\n  // of truth; otherwise, it's invalid if there's an error message.\n  const invalid = props['aria-invalid'] ?? !!errorMessage;\n  return {\n    errorId: errorMessage ? errorId : undefined,\n    invalid,\n    topError,\n    bottomError\n  };\n}","import classNames from 'classnames';\nimport { Hint } from \"../Hint\";\nimport { InlineError } from \"../InlineError\";\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\nimport { Fragment as _Fragment } from \"preact/compat/jsx-runtime\";\nimport { jsxs as _jsxs } from \"preact/compat/jsx-runtime\";\n/**\n * The Label component describes individual form fields (as a `<label>`) or fieldsets (as\n * a `<legend>`). They are built in to all form fields in the design system, but they can\n * also be used on their own to create custom fields.\n *\n * For information about how and when to use this component,\n * [refer to its full documentation page](https://design.cms.gov/components/label/).\n */\nexport const Label = props => {\n  const {\n    fieldId,\n    id,\n    children,\n    component,\n    hint,\n    hintId,\n    className,\n    inversed,\n    errorMessage,\n    errorId,\n    requirementLabel,\n    ...labelProps\n  } = props;\n  if (process.env.NODE_ENV !== 'production' && (hint || hintId)) {\n    console.warn(\"[Deprecated]: Hints are now their own component called 'Hint'. Please render your 'Hint' directly instead of passing them to 'Label'.\");\n  }\n  if (process.env.NODE_ENV !== 'production' && errorMessage) {\n    console.warn(\"[Deprecated]: Passing 'errorMessage' to the 'Label' component is now deprecated. Please render your error message directly with the 'InlineError' component instead.\");\n  }\n  let hintElement;\n  if (hint || requirementLabel) {\n    hintElement = /*#__PURE__*/_jsx(Hint, {\n      requirementLabel: requirementLabel,\n      inversed: inversed,\n      id: hintId,\n      children: hint\n    });\n  }\n  let errorElement = errorMessage;\n  if (typeof errorMessage === 'string') {\n    errorElement = /*#__PURE__*/_jsx(InlineError, {\n      id: errorId,\n      children: errorMessage\n    });\n  }\n  let htmlFor = fieldId;\n  if (component === 'legend' && fieldId) {\n    console.warn('The `for` attribute is invalid for legends. Omitting `fieldId` from rendered element.');\n    htmlFor = undefined;\n  }\n  const ComponentType = component;\n  const classes = classNames('ds-c-label', className, inversed && 'ds-c-label--inverse');\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(ComponentType, {\n      className: classes,\n      htmlFor: htmlFor,\n      id: id,\n      ...labelProps,\n      children: children\n    }), hintElement, errorElement]\n  });\n};\nLabel.defaultProps = {\n  component: 'label'\n};\nexport default Label;","/**\n *\n * Note that this does not return the `fieldId` in the props. That is up to the component\n * to apply to the `Label` itself. Some components purposely do not set a `for` attribute\n * on their labels. These are typically components with multiple inputs wrapped in a\n * `fieldset` like `ChoiceList`, `MultiInputDateField`, and `MonthPicker`.\n */\nexport function useLabelProps(props) {\n  const labelId = props.labelId ?? `${props.id}__label`;\n  const {\n    label,\n    labelClassName,\n    inversed\n  } = props;\n  return {\n    children: label,\n    className: labelClassName,\n    id: labelId,\n    inversed\n  };\n}\nexport default useLabelProps;","export function getAnalyticsContentFromRefs(refs) {\n  return refs.map(ref => ref.current?.textContent).find(textContent => textContent);\n}\nexport default getAnalyticsContentFromRefs;","/**\n * Cleans all the props associated with labels, hints, error messages, and component\n * wrappers, so they aren't passed to a field element (like an input), where they will\n * likely not be valid props or HTML attributes.\n */\nexport function cleanFieldProps(props) {\n  const newProps = {\n    ...props\n  };\n  delete newProps.className;\n  delete newProps.errorId;\n  delete newProps.errorMessage;\n  delete newProps.errorMessageClassName;\n  delete newProps.errorPlacement;\n  delete newProps.hint;\n  delete newProps.hintId;\n  delete newProps.requirementLabel;\n  delete newProps.labelId;\n  delete newProps.label;\n  delete newProps.labelClassName;\n  return newProps;\n}\nexport default cleanFieldProps;","import mergeIds from \"./mergeIds\";\n/**\n * Creates an `aria-describedby` string in a consistent order from optional\n * `aria-describedby`, `errorId`, and `hintId` props.\n */\nexport function describeField(props) {\n  return mergeIds(props['aria-describedby'], props.errorId, props.hintId) || undefined;\n}\nexport default describeField;","import { isValidElement } from \"preact/compat\";\nexport function findElementsOfType(types, node) {\n  if (!node || !(isValidElement(node) || Array.isArray(node))) {\n    // There's nothing to recurse on, and this is not the droid we're looking for\n    return [];\n  }\n  if (isValidElement(node) && types.includes(node.type)) {\n    // We found it! Return an array because it will be flattened\n    return [node];\n  }\n  if (Array.isArray(node)) {\n    // Recurse on each member of the array and flatten the result\n    return node.reduce((acc, child) => [...acc, ...findElementsOfType(types, child)], []);\n  }\n\n  // It's a React element, so recurse on its children (a ReactNode)\n  return findElementsOfType(types, node.props?.children);\n}","import classNames from 'classnames';\n/**\n * Strings together ids that may or may not exist with spaces in between. The\n * functionality is the same as `classNames`, but using a function named\n * `classNames` for merging ids makes the code a little confusing to read.\n *\n * Example use case: the `aria-describedby` attribute\n */\nconst mergeIds = classNames;\nexport default mergeIds;","/**\n * Combines multiple refs into one, even old-style ref functions\n *\n * Borrowed from https://github.com/gregberge/react-merge-refs/blob/main/src/index.tsx\n */\nexport default function mergeRefs(refs) {\n  return value => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}","export const NUM_MONTHS = 12;\n\n/**\n * Generates an array of month names according to the given or default locale\n *\n * @param  {string} [locale] locale for generating month names\n * @param  {boolean} [short] whether to return short month names\n * @return {string[]}        array of month names\n */\nexport function getMonthNames(locale) {\n  let short = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  const months = [];\n  for (let i = 0; i < NUM_MONTHS; i++) {\n    const date = new Date();\n    date.setMonth(i, 1);\n    months.push(date.toLocaleString(locale, {\n      month: short ? 'short' : 'long'\n    }));\n  }\n  return months;\n}","import Button from \"../Button/Button\";\nimport Choice from \"../ChoiceList/Choice\";\nimport classNames from 'classnames';\nimport describeField from \"../utilities/describeField\";\nimport useId from \"../utilities/useId\";\nimport { useState } from \"preact/compat\";\nimport { Label } from \"../Label\";\nimport { NUM_MONTHS, getMonthNames } from \"./getMonthNames\";\nimport { fallbackLocale, getLanguage, t } from \"../i18n\";\nimport { useLabelProps } from \"../Label/useLabelProps\";\nimport { useHint } from \"../Hint/useHint\";\nimport { useInlineError } from \"../InlineError/useInlineError\";\nimport { parseChildren } from \"./utils\";\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\nimport { jsxs as _jsxs } from \"preact/compat/jsx-runtime\";\nconst monthNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n/**\n * For information about how and when to use this component,\n * [refer to its full documentation page](https://design.cms.gov/components/month-picker/).\n */\nexport const MonthPicker = props => {\n  const propsFromHtml = parseChildren(props.children);\n  const defaultSelectedMonths = propsFromHtml ? propsFromHtml.selectedMonths : props.defaultSelectedMonths;\n  const disabledMonths = (propsFromHtml ? propsFromHtml.disabledMonths : props.disabledMonths) ?? [];\n  const id = useId('month-picker--', props.id);\n  const locale = fallbackLocale(getLanguage(), 'US');\n  const months = getMonthNames(locale);\n  const monthsLong = getMonthNames(locale, false);\n  const isControlled = props.selectedMonths !== undefined;\n  const [selectedMonthsState, setSelectedMonthsState] = useState(defaultSelectedMonths ?? []);\n  const selectedMonths = isControlled ? props.selectedMonths : selectedMonthsState;\n  function handleChange(event) {\n    if (props.onChange) {\n      props.onChange(event);\n    }\n    if (!isControlled) {\n      const month = parseInt(event.target.value);\n      const newSelectedMonths = selectedMonths.slice();\n      if (newSelectedMonths.includes(month)) {\n        newSelectedMonths.splice(newSelectedMonths.indexOf(month), 1);\n      } else {\n        newSelectedMonths.push(month);\n      }\n      setSelectedMonthsState(newSelectedMonths);\n    }\n  }\n  function handleSelectAll(event) {\n    if (props.onSelectAll) {\n      props.onSelectAll(event);\n    }\n    if (!isControlled) {\n      setSelectedMonthsState(monthNumbers.filter(m => {\n        if (disabledMonths.includes(m)) {\n          return selectedMonthsState.includes(m);\n        } else {\n          return true;\n        }\n      }));\n    }\n  }\n  function handleClearAll(event) {\n    if (props.onClearAll) {\n      props.onClearAll(event);\n    }\n    if (!isControlled) {\n      setSelectedMonthsState(monthNumbers.filter(m => {\n        if (disabledMonths.includes(m)) {\n          return selectedMonthsState.includes(m);\n        } else {\n          return false;\n        }\n      }));\n    }\n  }\n  const selectAllPressed = selectedMonths.length === NUM_MONTHS - disabledMonths.length;\n  const clearAllPressed = selectedMonths.length === 0;\n  const {\n    errorId,\n    topError,\n    bottomError,\n    invalid\n  } = useInlineError({\n    ...props,\n    id\n  });\n  const {\n    hintId,\n    hintElement\n  } = useHint({\n    ...props,\n    id\n  });\n  const labelProps = useLabelProps({\n    ...props,\n    id\n  });\n  return /*#__PURE__*/_jsxs(\"fieldset\", {\n    \"aria-invalid\": invalid,\n    \"aria-describedby\": describeField({\n      ...props,\n      hintId,\n      errorId\n    }),\n    className: classNames('ds-c-fieldset', 'ds-c-month-picker', props.className),\n    children: [/*#__PURE__*/_jsx(Label, {\n      component: \"legend\",\n      ...labelProps\n    }), hintElement, topError, /*#__PURE__*/_jsxs(\"div\", {\n      className: \"ds-c-month-picker__buttons ds-u-clearfix\",\n      children: [/*#__PURE__*/_jsx(Button, {\n        \"aria-pressed\": selectAllPressed,\n        size: \"small\",\n        className: \"ds-c-month-picker__button\",\n        onClick: handleSelectAll,\n        onDark: props.inversed,\n        variation: props.buttonVariation,\n        children: props.selectAllText ?? t('monthPicker.selectAllText')\n      }), /*#__PURE__*/_jsx(Button, {\n        \"aria-pressed\": clearAllPressed,\n        size: \"small\",\n        className: \"ds-c-month-picker__button\",\n        onClick: handleClearAll,\n        onDark: props.inversed,\n        variation: props.buttonVariation,\n        children: props.clearAllText ?? t('monthPicker.clearAllText')\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"ds-c-month-picker__months\",\n      children: /*#__PURE__*/_jsx(\"ol\", {\n        role: \"list\",\n        className: \"ds-c-list--bare ds-c-month-picker__months-list\",\n        children: months.map((month, i) => /*#__PURE__*/_jsx(\"li\", {\n          children: /*#__PURE__*/_jsx(Choice, {\n            \"aria-label\": monthsLong[i],\n            checked: selectedMonths.includes(i + 1),\n            className: \"ds-c-month-picker__month\",\n            disabled: disabledMonths.includes(i + 1),\n            inversed: props.inversed,\n            onChange: handleChange,\n            name: props.name,\n            type: \"checkbox\",\n            value: i + 1,\n            label: month,\n            id: `${id}__choice--${i + 1}`,\n            _choiceChild: true\n          })\n        }, month))\n      })\n    }), bottomError]\n  });\n};\nexport default MonthPicker;","import { findElementsOfType } from \"../utilities/findElementsOfType\";\nexport function parseChildren(node) {\n  const elements = findElementsOfType(['input'], node);\n  if (elements.length) {\n    const selectedMonths = [];\n    const disabledMonths = [];\n    for (const element of elements) {\n      const attrs = element.props;\n      const monthNumber = parseInt(attrs.value);\n      if (monthNumber < 1 || monthNumber > 12) {\n        throw new Error('Each month input needs a value from 1 to 12.');\n      }\n      if (attrs.checked !== undefined) selectedMonths.push(monthNumber);\n      if (attrs.disabled !== undefined) disabledMonths.push(monthNumber);\n    }\n    return {\n      selectedMonths,\n      disabledMonths\n    };\n  }\n}","import { define } from \"../preactement/define\";\nimport { MonthPicker } from \"../../MonthPicker\";\nimport { parseBooleanAttr } from \"../wrapperUtils\";\nimport { formAttrs } from \"../shared-attributes/form\";\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\nconst attributes = ['button-variation', 'class-name', 'clear-all-text', 'default-selected-months', 'disabled-months', 'inversed', 'name', 'root-id', 'select-all-text', ...formAttrs];\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-enable */\n\nconst Wrapper = _ref => {\n  let {\n    children,\n    rootId,\n    defaultSelectedMonths,\n    disabledMonths,\n    selectedMonths,\n    ...otherProps\n  } = _ref;\n  return /*#__PURE__*/_jsx(MonthPicker, {\n    ...otherProps,\n    id: rootId,\n    inversed: parseBooleanAttr(otherProps.inversed),\n    defaultSelectedMonths: typeof defaultSelectedMonths === 'string' ? JSON.parse(defaultSelectedMonths) : defaultSelectedMonths,\n    disabledMonths: typeof disabledMonths === 'string' ? JSON.parse(disabledMonths) : disabledMonths,\n    selectedMonths: typeof selectedMonths === 'string' ? JSON.parse(selectedMonths) : selectedMonths,\n    children: children\n  });\n};\ndefine('ds-month-picker', () => Wrapper, {\n  attributes,\n  events: ['onChange', 'onSelectAll', 'onClearAll']\n});","const labelAttrs = ['label', 'label-class-name', 'label-id'];\nconst hintAttrs = ['hint', 'hint-id', 'requirement-label', 'hint-class-name'];\nconst inlineErrorAttrs = ['error-id', 'error-placement', 'error-message', 'error-message-class-name'];\nexport const formAttrs = [...labelAttrs, ...hintAttrs, ...inlineErrorAttrs];","export function parseBooleanAttr(attr) {\n  // If it's defined but has no value, we count that as `true`.\n  return attr !== undefined && attr !== 'false';\n}\nexport function parseDateAttr(attr) {\n  return attr ? new Date(attr) : undefined;\n}\nexport function parseIntegerAttr(attr) {\n  if (attr !== undefined) return parseInt(attr);\n}\nexport function parseJsonAttr(attr) {\n  const isJsonString = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n  return isJsonString(attr) ? JSON.parse(attr) : attr;\n}"],"names":["window","EvEmitter","proto","prototype","on","eventName","listener","events","this","_events","listeners","indexOf","push","once","onceEvents","_onceEvents","off","length","index","splice","emitEvent","args","slice","onceListeners","i","apply","allOff","Button","props","analytics","analyticsLabelOverride","analyticsParentHeading","analyticsParentType","onAnalyticsEvent","children","className","inputRef","isAlternate","onClick","onDark","size","variation","otherProps","contentRef","sendButtonEvent","_ref","href","config","defaultAnalyticsFunction","type","useRef","buttonSendsAnalytics","buttonText","getAnalyticsContentFromRefs","buttonStyle","buttonType","buttonParentHeading","buttonParentType","event_name","event_extension","text","button_style","button_type","parent_component_heading","parent_component_type","link_url","useButtonAnalytics","ComponentType","colorSchemeClass","modeClass","sizeClass","variationClass","attrs","handleClick","e","disabled","role","ref","mergeRefs","onKeyPress","key","undefined","defaultProps","dsChoiceEmitter","Choice","_choiceChild","initialCheckedState","checked","defaultChecked","internalCheckedState","setChecked","useState","isControlled","radioCheckedEventName","name","id","hintId","hintElement","labelProps","errorId","errorElement","inversed","errorMessageClassName","errorMessage","useEffect","handleRadioChecked","checkedId","ariaLive","ariaRelevant","ariaAtomic","inputClassName","checkedChildren","uncheckedChildren","inputProps","onChange","event","target","fieldId","Hint","requirementLabel","hintClasses","hintPadding","trim","replace","useHint","hint","hintClassName","viewBox","AlertCircleIcon","iconCssClasses","title","t","d","SvgIcon","ariaHidden","description","svgClasses","rootId","titleId","descriptionId","ariaLabelledBy","isSrVisible","screenReaderProps","xmlns","InlineError","classes","useInlineError","errorPlacement","errorPlacementDefault","topError","bottomError","invalid","Label","component","htmlFor","console","warn","useLabelProps","labelId","label","labelClassName","refs","map","current","textContent","find","newProps","findElementsOfType","types","node","isValidElement","Array","isArray","includes","reduce","acc","child","value","forEach","getMonthNames","locale","short","arguments","months","date","Date","setMonth","toLocaleString","month","monthNumbers","MonthPicker","propsFromHtml","elements","selectedMonths","disabledMonths","element","monthNumber","parseInt","Error","parseChildren","defaultSelectedMonths","useId","monthsLong","selectedMonthsState","setSelectedMonthsState","handleChange","newSelectedMonths","selectAllPressed","clearAllPressed","describeField","onSelectAll","filter","m","buttonVariation","selectAllText","onClearAll","clearAllText","attributes","Wrapper","JSON","parse","formAttrs","parseBooleanAttr","attr","parseDateAttr","parseIntegerAttr","parseJsonAttr","str","isJsonString"],"sourceRoot":""}