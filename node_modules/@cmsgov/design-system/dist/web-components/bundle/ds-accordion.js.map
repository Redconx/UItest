{"version":3,"file":"ds-accordion.js","mappings":"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","sources":["webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Icons/SvgIcon.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Accordion/Accordion.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/web-components/ds-accordion/ds-accordion.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Icons/RemoveIcon.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Icons/AddIcon.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/Accordion/AccordionItem.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/web-components/ds-accordion/ds-accordion-item.js","webpack://DesignSystem/./packages/design-system/dist/preact-components/esm/web-components/wrapperUtils.js"],"sourcesContent":["import classNames from 'classnames';\nimport useId from \"../utilities/useId\";\n\n// a type for react icon components that makes the 'title' prop optional & removes 'children' from type\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\nimport { jsxs as _jsxs } from \"preact/compat/jsx-runtime\";\nexport const SvgIcon = _ref => {\n  let {\n    ariaHidden,\n    className,\n    children,\n    description,\n    id,\n    inversed,\n    title,\n    viewBox,\n    ...otherProps\n  } = _ref;\n  const svgClasses = classNames('ds-c-icon', {\n    'ds-c-icon--inverse': inversed\n  }, className);\n  const rootId = useId('icon--', id);\n  const titleId = `${rootId}__title`;\n  const descriptionId = `${rootId}__desc`;\n  const ariaLabelledBy = description ? `${titleId} ${descriptionId}` : titleId;\n  const isSrVisible = !ariaHidden;\n  const screenReaderProps = {};\n  if (isSrVisible) {\n    screenReaderProps['aria-labelledby'] = ariaLabelledBy;\n    screenReaderProps['role'] = 'img';\n  }\n  return /*#__PURE__*/_jsxs(\"svg\", {\n    \"aria-hidden\": ariaHidden,\n    className: svgClasses,\n    id: id ?? isSrVisible ? rootId : undefined,\n    viewBox: viewBox,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ...screenReaderProps,\n    ...otherProps,\n    children: [isSrVisible && /*#__PURE__*/_jsx(\"title\", {\n      id: titleId,\n      children: title\n    }), isSrVisible && description && /*#__PURE__*/_jsx(\"desc\", {\n      id: descriptionId,\n      children: description\n    }), children]\n  });\n};\nSvgIcon.defaultProps = {\n  ariaHidden: true,\n  inversed: false\n};","import classNames from 'classnames';\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\n/**\n * For information about how and when to use this component,\n * [refer to its full documentation page](https://design.cms.gov/components/accordion/).\n */\nexport const Accordion = _ref => {\n  let {\n    bordered,\n    children,\n    className\n  } = _ref;\n  const classes = classNames('ds-c-accordion', bordered && 'ds-c-accordion--bordered', className);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes,\n    children: children\n  });\n};\nexport default Accordion;","import { define } from \"../preactement/define\";\nimport { Accordion } from \"../../Accordion\";\nconst attributes = ['class-name', 'bordered'];\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-enable */\n\ndefine('ds-accordion', () => Accordion, {\n  attributes\n});","import { t } from \"../i18n\";\nimport { SvgIcon } from \"./SvgIcon\";\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\nconst defaultProps = {\n  className: '',\n  viewBox: '0 0 24 24'\n};\nexport function RemoveIcon(props) {\n  const iconCssClasses = `ds-c-icon--remove ${props.className || ''}`;\n  return /*#__PURE__*/_jsx(SvgIcon, {\n    title: t('icons.remove'),\n    ...defaultProps,\n    ...props,\n    className: iconCssClasses,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M19 13H5v-2h14v2z\"\n    })\n  });\n}","import { t } from \"../i18n\";\nimport { SvgIcon } from \"./SvgIcon\";\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\nconst defaultProps = {\n  className: '',\n  viewBox: '3 3 18 18'\n};\nexport function AddIcon(props) {\n  const iconCssClasses = `ds-c-icon--add ${props.className || ''}`;\n  return /*#__PURE__*/_jsx(SvgIcon, {\n    title: t('icons.add'),\n    ...defaultProps,\n    ...props,\n    className: iconCssClasses,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n    })\n  });\n}","import { useState } from \"preact/compat\";\nimport { AddIcon, RemoveIcon } from \"../Icons\";\nimport classNames from 'classnames';\nimport useId from \"../utilities/useId\";\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\nimport { jsxs as _jsxs } from \"preact/compat/jsx-runtime\";\nimport { Fragment as _Fragment } from \"preact/compat/jsx-runtime\";\nexport const AccordionItem = _ref => {\n  let {\n    buttonClassName,\n    children,\n    contentClassName,\n    defaultOpen,\n    heading,\n    headingLevel,\n    id,\n    // TODO: Explore deprecating `isControlledOpen` in favor of `isOpen`\n    isControlledOpen,\n    onChange,\n    closeIconComponent,\n    openIconComponent\n  } = _ref;\n  const contentClasses = classNames('ds-c-accordion__content', contentClassName);\n  const buttonClasses = classNames('ds-c-accordion__button', buttonClassName);\n  const HeadingTag = `h${headingLevel}`;\n  const contentId = useId('accordion-item--', id);\n  const buttonId = `${contentId}__button`;\n  const isControlled = isControlledOpen !== undefined;\n  const [isOpen, setIsOpen] = useState(isControlled ? isControlledOpen : defaultOpen);\n  const handleClick = event => {\n    onChange?.(event);\n    if (!isControlled) {\n      setIsOpen(!isOpen);\n    }\n  };\n  const isItemOpen = isControlled ? isControlledOpen : isOpen;\n  const CloseIconComponent = closeIconComponent;\n  const OpenIconComponent = openIconComponent;\n  const closeIcon = /*#__PURE__*/_jsx(CloseIconComponent, {\n    className: \"ds-c-accordion__button-icon\",\n    id: `${contentId}__icon`\n  });\n  const openIcon = /*#__PURE__*/_jsx(OpenIconComponent, {\n    className: \"ds-c-accordion__button-icon\",\n    id: `${contentId}__icon`\n  });\n  if (heading) {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(HeadingTag, {\n        className: \"ds-c-accordion__heading\",\n        children: /*#__PURE__*/_jsxs(\"button\", {\n          className: buttonClasses,\n          \"aria-expanded\": isItemOpen,\n          \"aria-controls\": contentId,\n          id: buttonId,\n          onClick: handleClick,\n          type: \"button\",\n          children: [heading, isItemOpen ? closeIcon : openIcon]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: contentClasses,\n        id: contentId,\n        hidden: isControlled ? !isControlledOpen : !isOpen,\n        children: children\n      })]\n    });\n  }\n};\nAccordionItem.defaultProps = {\n  defaultOpen: false,\n  headingLevel: '2',\n  closeIconComponent: RemoveIcon,\n  openIconComponent: AddIcon\n};\nexport default AccordionItem;","import { define } from \"../preactement/define\";\nimport { AccordionItem } from \"../../Accordion\";\nimport { parseBooleanAttr } from \"../wrapperUtils\";\nimport { jsx as _jsx } from \"preact/compat/jsx-runtime\";\nconst attributes = ['button-class-name', 'content-class-name', 'content-id', 'default-open', 'heading', 'heading-level'];\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-enable */\n\nconst Wrapper = _ref => {\n  let {\n    defaultOpen,\n    contentId,\n    ...otherProps\n  } = _ref;\n  return /*#__PURE__*/_jsx(AccordionItem, {\n    ...otherProps,\n    defaultOpen: parseBooleanAttr(defaultOpen),\n    id: contentId\n  });\n};\ndefine('ds-accordion-item', () => Wrapper, {\n  attributes,\n  events: ['onChange']\n});","export function parseBooleanAttr(attr) {\n  // If it's defined but has no value, we count that as `true`.\n  return attr !== undefined && attr !== 'false';\n}\nexport function parseDateAttr(attr) {\n  return attr ? new Date(attr) : undefined;\n}\nexport function parseIntegerAttr(attr) {\n  if (attr !== undefined) return parseInt(attr);\n}\nexport function parseJsonAttr(attr) {\n  const isJsonString = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n  return isJsonString(attr) ? JSON.parse(attr) : attr;\n}"],"names":["SvgIcon","_ref","ariaHidden","className","children","description","id","inversed","title","viewBox","otherProps","svgClasses","rootId","titleId","descriptionId","ariaLabelledBy","isSrVisible","screenReaderProps","undefined","xmlns","defaultProps","Accordion","bordered","classes","attributes","AccordionItem","buttonClassName","contentClassName","defaultOpen","heading","headingLevel","isControlledOpen","onChange","closeIconComponent","openIconComponent","contentClasses","buttonClasses","HeadingTag","contentId","useId","buttonId","isControlled","isOpen","setIsOpen","useState","isItemOpen","CloseIconComponent","OpenIconComponent","closeIcon","openIcon","onClick","event","type","hidden","props","iconCssClasses","t","d","Wrapper","events","parseBooleanAttr","attr","parseDateAttr","Date","parseIntegerAttr","parseInt","parseJsonAttr","str","JSON","parse","e","isJsonString"],"sourceRoot":""}